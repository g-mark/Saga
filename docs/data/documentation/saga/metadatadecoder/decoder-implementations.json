{
  "abstract" : [
    {
      "text" : "No overview available.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Saga\/documentation\/Saga",
        "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder\/Decoder-Implementations"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "Saga"
      }
    ],
    "role" : "collectionGroup",
    "title" : "Decoder Implementations"
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder\/decode(_:as:)-520be",
        "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder\/decode(_:as:)-5gfgl",
        "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder\/decode(_:using:)-2nkj8",
        "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder\/decode(_:using:)-3gqwo",
        "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder\/decodeIfPresent(_:as:)-dzez",
        "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder\/decodeIfPresent(_:as:)-mhc5",
        "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder\/decodeSingleValue(as:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/saga\/metadatadecoder\/decoder-implementations"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Saga/documentation/Saga": {
  "abstract" : [
    {
      "text" : "A static site generator, written in Swift, allowing you to supply your own metadata types for your items.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Saga",
  "type" : "topic",
  "url" : "\/documentation\/saga"
},
"doc://Saga/documentation/Saga/MetadataDecoder": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MetadataDecoder"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MetadataDecoder"
    }
  ],
  "role" : "symbol",
  "title" : "MetadataDecoder",
  "type" : "topic",
  "url" : "\/documentation\/saga\/metadatadecoder"
},
"doc://Saga/documentation/Saga/MetadataDecoder/decode(_:as:)-520be": {
  "abstract" : [
    {
      "text" : "Decode a value for a given key, specified as a ",
      "type" : "text"
    },
    {
      "code" : "CodingKey",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "decode"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "K"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "K"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "as"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ".Type) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder\/decode(_:as:)-520be",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "decode(_:as:)",
  "type" : "topic",
  "url" : "\/documentation\/saga\/metadatadecoder\/decode(_:as:)-520be"
},
"doc://Saga/documentation/Saga/MetadataDecoder/decode(_:as:)-5gfgl": {
  "abstract" : [
    {
      "text" : "Decode a value for a given key, specified as a string.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "decode"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "as"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ".Type) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder\/decode(_:as:)-5gfgl",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "decode(_:as:)",
  "type" : "topic",
  "url" : "\/documentation\/saga\/metadatadecoder\/decode(_:as:)-5gfgl"
},
"doc://Saga/documentation/Saga/MetadataDecoder/decode(_:using:)-2nkj8": {
  "abstract" : [
    {
      "text" : "Decode a date from a string for a given key (specified as a ",
      "type" : "text"
    },
    {
      "code" : "CodingKey",
      "type" : "codeVoice"
    },
    {
      "text" : "), using",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a specific formatter. To decode a date using the decoder’s default settings,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "simply decode it like any other value instead of using this method.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "decode"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "K"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "F"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "K"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "using"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "F"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DateV",
      "text" : "Date"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder\/decode(_:using:)-2nkj8",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "decode(_:using:)",
  "type" : "topic",
  "url" : "\/documentation\/saga\/metadatadecoder\/decode(_:using:)-2nkj8"
},
"doc://Saga/documentation/Saga/MetadataDecoder/decode(_:using:)-3gqwo": {
  "abstract" : [
    {
      "text" : "Decode a date from a string for a given key (specified as a string), using a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "specific formatter. To decode a date using the decoder’s default settings,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "simply decode it like any other value instead of using this method.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "decode"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "F"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "using"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "F"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DateV",
      "text" : "Date"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder\/decode(_:using:)-3gqwo",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "decode(_:using:)",
  "type" : "topic",
  "url" : "\/documentation\/saga\/metadatadecoder\/decode(_:using:)-3gqwo"
},
"doc://Saga/documentation/Saga/MetadataDecoder/decodeIfPresent(_:as:)-dzez": {
  "abstract" : [
    {
      "text" : "Decode an optional value for a given key, specified as a ",
      "type" : "text"
    },
    {
      "code" : "CodingKey",
      "type" : "codeVoice"
    },
    {
      "text" : ". Throws an error if the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "specified key exists but is not able to be decoded as the inferred type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "decodeIfPresent"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "K"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "K"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "as"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ".Type) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder\/decodeIfPresent(_:as:)-dzez",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "decodeIfPresent(_:as:)",
  "type" : "topic",
  "url" : "\/documentation\/saga\/metadatadecoder\/decodeifpresent(_:as:)-dzez"
},
"doc://Saga/documentation/Saga/MetadataDecoder/decodeIfPresent(_:as:)-mhc5": {
  "abstract" : [
    {
      "text" : "Decode an optional value for a given key, specified as a string. Throws an error if the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "specified key exists but is not able to be decoded as the inferred type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "decodeIfPresent"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "as"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ".Type) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder\/decodeIfPresent(_:as:)-mhc5",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "decodeIfPresent(_:as:)",
  "type" : "topic",
  "url" : "\/documentation\/saga\/metadatadecoder\/decodeifpresent(_:as:)-mhc5"
},
"doc://Saga/documentation/Saga/MetadataDecoder/decodeSingleValue(as:)": {
  "abstract" : [
    {
      "text" : "Decode a singular value from the underlying data.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "decodeSingleValue"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "as"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ".Type) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/MetadataDecoder\/decodeSingleValue(as:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "decodeSingleValue(as:)",
  "type" : "topic",
  "url" : "\/documentation\/saga\/metadatadecoder\/decodesinglevalue(as:)"
}
}
}